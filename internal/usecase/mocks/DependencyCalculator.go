// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	entity "github.com/fabianoshz/iflantis/internal/entity"
	mock "github.com/stretchr/testify/mock"
)

// DependencyCalculator is an autogenerated mock type for the DependencyCalculator type
type DependencyCalculator struct {
	mock.Mock
}

// CalculateDependencies provides a mock function with given fields: _a0
func (_m *DependencyCalculator) CalculateDependencies(_a0 []entity.Resource) []entity.Resource {
	ret := _m.Called(_a0)

	var r0 []entity.Resource
	if rf, ok := ret.Get(0).(func([]entity.Resource) []entity.Resource); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.Resource)
		}
	}

	return r0
}

type mockConstructorTestingTNewDependencyCalculator interface {
	mock.TestingT
	Cleanup(func())
}

// NewDependencyCalculator creates a new instance of DependencyCalculator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDependencyCalculator(t mockConstructorTestingTNewDependencyCalculator) *DependencyCalculator {
	mock := &DependencyCalculator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	entity "github.com/fabianoshz/iflantis/internal/entity"
	mock "github.com/stretchr/testify/mock"
)

// ExecutionApplier is an autogenerated mock type for the ExecutionApplier type
type ExecutionApplier struct {
	mock.Mock
}

// ApplyExecution provides a mock function with given fields: _a0
func (_m *ExecutionApplier) ApplyExecution(_a0 entity.Changelist) bool {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(entity.Changelist) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewExecutionApplier interface {
	mock.TestingT
	Cleanup(func())
}

// NewExecutionApplier creates a new instance of ExecutionApplier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExecutionApplier(t mockConstructorTestingTNewExecutionApplier) *ExecutionApplier {
	mock := &ExecutionApplier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
